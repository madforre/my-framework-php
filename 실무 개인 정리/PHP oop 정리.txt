인터페이스(Interface)

	- 반드시 만들어야한다라고 규정하는 일종의 규칙을 정의

	- 상속받는 클래스의 몇가지 필수 기능(함수)를 정의하기 위해 사용
	
	기능 스펙을 모아놓은 명세서이다.
	인터페이스를 상속받는 클래스는 implements 키워드를 이용한다.
	

$this-> vs self:: 차이점

	- $this 는 현재 인스턴스를 가리키고 self 는 
	  명령이 실행되는 위치의 클래스 자체를 가리켜요.


생성자(constructor)

	클래스는 새로운 객체를 생성할 때마다 생성자(constructor)라는 
	메서드를 호출합니다.

 
	생성자는 객체가 생성될 때마다 호출되어 해당 객체의 프로퍼티를 
	초기화하거나, 필요한 다른 객체를 생성하는 등의 초기화 작업을 
	수행합니다.

	생성자는 다른 메소드와 같은 방식으로 선언되며, 
	매개변수를 가질 수도 있습니다. 


	PHP에서 생성자의 이름은 __construct()로 정해져 있습니다.

	이러한 생성자는 객체가 생성될 때마다 자동으로 호출되므로, 
	사용자가 직접 호출할 필요가 없습니다.

오버로딩(overloading)

	다른 대부분의 객체 지향 프로그래밍 언어에서 오버로딩(overloading)은 매개변수의 개수와 타입을 달리하여 
	같은 이름의 메소드를 중복하여 정의하는 것을 의미합니다.

	하지만 PHP에서는 다른 언어와는 달리 프로퍼티나 메소드를 동적으로 '생성한다'는 의미로 오버로딩을 사용합니다.
	이렇게 동적으로 생성된 멤버는 해당 클래스의 매직 메소드(magic method)를 통해 다양한 형태로 처리할 수 있습니다.

	이때 오버로딩되는 메소드는 반드시 public으로 정의되어야만 합니다.

   * private로 선언된 프로퍼티는 클래스 외부에서 접근할 수 없으므로, 오버로딩을 사용함.
   * __call() 메소드는 클래스 영역에서 접근 불가 메소드를 호출할 때 호출됩니다.


static 키워드

	클래스를 정의할 때 static 키워드를 사용한 프로퍼티와 메소드는 해당 클래스의 인스턴스를 생성하지 않아도 접근할 수 있게 됩니다.
	
	이러한 프로퍼티와 메소드를 정적 멤버(static member)라고 합니다.

	정적 멤버의 특징은 다음과 같습니다.

		1. static 키워드로 선언된 정적 프로퍼티는 인스턴스화된 객체에서는 접근할 수 없습니다.

		2. static 키워드로 선언된 정적 메소드는 인스턴스화된 객체에서도 접근할 수 있습니다.

		3. 정적 메소드 내에서는 $this 의사 변수를 사용할 수 없습니다.
	   	   따라서 self 키워드와 함께 범위 지정 연산자를 사용하여 프로퍼티에 접근합니다.

		* 또한, 생성된 인스턴스에서는 정적 프로퍼티에 접근할 수 없습니다.

범위 지정 연산자(::)

	클래스의 프로퍼티나 메소드에 접근하기 위해서는 인스턴스를 생성하고, 화살표 연산자(->)를 사용해야 합니다.
	
	하지만 단순히 클래스의 정의 내에서 프로퍼티나 메소드를 사용하고 싶을 때는 범위 지정 연산자(::)를 사용할 수 있습니다.

	범위 지정 연산자(::)는 클래스의 상수, 정적(static) 멤버 또는 재정의된 멤버에 접근할 수 있게 해줍니다.


	또한, 다음 키워드를 사용하면 클래스의 정의 내에서 특정 프로퍼티나 메소드에 접근할 수 있습니다.

		1. self : 자기 자신에 접근할 때

		2. parent : 부모 클래스에 접근할 때

추상 메소드

	자식 클래스에서 반드시 오버라이딩해야만 사용할 수 있는 메소드

	선언부만 존재하며 구현부는 작성되어 있지 않음


	abstract 접근제어자 function 메소드이름();

	위와 같이 선언부만 있고 구현부가 없다는 의미로 선언부 끝에 바로 세미콜론(;)을 추가합니다.

추상 클래스(abstract class)

	PHP에서는 최소한 하나 이상의 추상 메소드를 포함하는 클래스를 추상 클래스(abstract class)라고 합니다.

	추상 클래스는 객체 지향 프로그래밍에서 중요한 특징인 다형성을 가진 메소드의 집합을 정의할 수 있게 해줍니다.

	즉, 반드시 사용되어야 하는 메소드를 추상 클래스에 추상 메소드로 선언해 놓으면, 이 클래스를 상속받는 모든 클래스에서는 
	이 추상 메소드를 반드시 재정의해야 합니다.

	추상 클래스는 동작이 정의되어 있지 않은 추상 메소드를 포함하고 있으므로 인스턴스 생성 불가능
	
* url은 uri에 포함되는 개념이다.

프로퍼티 오버로딩

	접근 불가 프로퍼티를 오버로딩하기 위해 다음과 같은 매직 메소드가 쓰인다.

	__set() , __get(), __isset(), __unset() 이 쓰인다.

메소드 오버로딩

	접근 불사 메소드를 오버로딩하기 위해 __call(), __callStatic() 매직 메소드가 쓰인다.

매직 메소드란?

	
	이중 밑줄__ 로 시작하며
	항상 클래스에 정의된 기능이다.

바인딩(binding)

	바인딩(binding)이란 프로그램에 사용된 구성 요소의 실제 값 또는 
	프로퍼티를 결정짓는 행위를 의미합니다.

