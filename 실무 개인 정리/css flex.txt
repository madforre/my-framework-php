* flex: auto; 는 flex : 1 1 auto; 와 같다.

	flex-grow : 1;
	flex-shrink : 1;
	flex-basis : auto;


justify-content

	Container안에 있는 Item들을 수평방향으로 정렬하는 방법을 지정합니다.

align-items

	Container 안에 있는 item들을 수직방향을 정렬하는 방법을 지정합니다.

-----------------------------------------------------------------------------

﻿* Flex container: display: flex를 설정 한 부모 엘리먼트
* Flex items : Flex container 내의 자식 엘리먼트

display 속성을 flex로 설정하면 정렬되지 않은 
목록(ul)이 자동으로 flex container가 되고
자식 엘리먼트 (이 경우 li)가 flex items가 된다.

-------------------------------------------------------------------------------------------

@ Flex Container

Flex Container 의 프로퍼티(Properties)

 1. Flex-direction ( 기본적으로 row로 설정된다. )

	플렉스 아이템들이 주축(main axis)를 따라 배치되는 방향을 제어한다.
	(row, column, row-reverse, column-reverse)

	* 기술적으로, "수평(horizontal)"과 "수직(vertical)"은 "flex world"에서는 
	  올바른 용어가 아니다.
	  이것은 주축(main axis) 및 교차 축(cross axis)으로 불린다. 
	  기본값은 아래와 같다.
	  일반적으로, 주축의 기본 방향은 왼쪽에서 오른쪽으로 
	  배치되는 "수평"과 같이 느껴진다.
	  교차 축은 위에서 아래로 배치되는 "수직"과 같다.

 2. Flex-wrap ( 기본적으로 no-wrap으로 설정된다. )

	flex-wrap 속성은 다음 세 가지 값 중 하나를 가질 수 있다.
	(wrap, no-wrap, wrap-reverse)

	- no-wrap : 플렉스 컨테이너가 플렉스 아이템들을 한 줄에 계속해서 수용
	- wrap : 플렉스 컨테이너 내의 사용 가능한 공간이 플렉스 아이템을
		기본 너비로 더이상 포함할 수 없으면 여러 줄로 나뉘어진다.
		(텍스트 파일에서 엔터 친 것 처럼 multi-line 플렉스 컨테이너가 됨)
	- wrap-reverse : 여러 줄로 나뉘어질 때 아래가 아니라 위로 올라간다.

 3. Flex-flow

	- flex-direction 및 flex-wrap 값의 약칭 속성이다.
	  (border : 1px solid red 처럼 여러 값이 한 행에 선언)
	  
	 예 ) flex-flow : row wrap;

 4. Justify-content (기본 값은 flex-start)

	Flexbox 모델이 정말 좋은 것을 다시한번 확인 할 수 있는 속성이다.

	justify-content 속성은 아래의 5가지 값 중 하나를 갖는다.
	(flex-start, flex-end, center, space-between, space-around)
	
		flex-start : 모든 flex-items를 주축의 시작 부분으로 그룹화
		flex-end : 주축(main axis)의 끝으로 그룹화
		center : flex-items를 주축을 따라 중앙에 배치
		space-between : 각 플렉스 항목 사이에 동일한 간격 유지
		space-around : flex-items 주위에 동일한 간격을 유지

	justify-content 속성은 주축(main axis)에서 플랙스 아이템을 
	배치하는 방법을 정의한다.

 5. Align-items (기본 값은 stretch 이다.)

	align-items 속성은 justify-content 속성과 다소 비슷하다.
	
	align-items은 다음 값 중 하나를 가질 수 있다. 
	flex-start || flex-end || center || stretch || baseline

		stretch - 플렉스 아이템이 플렉스 컨테이너의 전체
			높이를 채울 수 있도록 플렉스 아이템을 늘린다.

		baseline - 베이스라인들을 따라 플렉스 아이템을 정리한다.
			 (텍스트 라인 밑줄인 기준선에 따라 정렬된다.)

	즉 플렉스 아이템이 교차 축(cross axis)에 배치되는 방법을 정의한다. 
	이것이 align-items 속성과 justify-content의 차이점이다.

 6. Align-content (기본 값은 stretch)
	
	align-content 속성은 multi-line 플렉스 컨테이너에서 사용된다.

	baseline을 제외하곤 align-items과 동일한 값을 사용한다.

	의미상으로, 이것은 multi-line 플렉스 컨테이너에서 
	플렉스 아이템이 정렬되는 방법을 컨트롤 한다.

	- stretch를 사용하면, 플렉스 아이템은 교차 축을 따라 사용 가능한 공간에 
	   맞게 "늘어난다(stretched)".

	- flex-start : multi-line 컨테이너의 아이템을 교차 축의 시작 부분에 정렬한다.
		   교차 축은 기본적으로 위에서 아래로 정렬되는 거을 기억하자.
		   따라서, 플렉스 아이템은 플렉스 컨테이너의 상단(top)에 정렬된다.

	- flex-end, center 는 start를 참고하자.

-------------------------------------------------------------------------------------------

@ Flex Items

	* flex-grow : 플렉스 아이템의 확장을 제어한다. 
		    (기본은 0, 화면에 맞게 커지지 않는다.) - 확대 스위치
	
	* flex-shrink : 필요하다면 플렉스 아이템을 줄인다.

	* flex-basis : 플렉스 아이템의 초기 크기를 지정한다. 
		    (0으로 설정시에도 px등 단위 꼭 사용할 것)

Flex shorthand

    - flex : 0 1 auto;

	- flex: default 와 같다.
	- 차례대로 flex-grow, flex-shrink, flex-basis를 의미한다.

    - flex : 0 0 auto;

	- flex: none 과 같다.
	- 플렉스 아이템은 확대되거나 축소되지 않는다.

    - flex : 1 1 auto;

	- flex: auto와 동일하다.
	- 확대 및 축소 스위치가 켜지고 너비가 자동으로 계산된다.

* 플렉스 아이템에 폭(width)가 없는 경우 flex-grow 값에 따라
	  "확장(widen)" 되는 정도를 결정한다.

	- 아이템의 너비가 없는 문제를 flex-grow 값이 처리.
	- 컨텐츠 크기를 기반으로 하지 않고 확대(grow) 값을 기반으로 폭 계산
	  ( 반응형에 유리 )

Align-self

	플렉스 아이템을 더 세밀하게 컨트롤 할 수 있도록 한다.
	
	인접한(neighboring) 플렉스 아이템에 영향을 주지 않고, 
	단일 플렉스 아이템의 위치를 교차 축(cross-axis)을 따라 변경하고자 할 때
	사용한다.

	이 속성은 다음 값 중 하나를 가질 수 있다 :
		 auto || flex-start || flex-end || center || baseline || stretch

	 - auto : auto는 타겟에 지정된 플렉스 아이템의 값을 부모의 align-items 
		값으로 설정하거나 엘리먼트에 부모가없는 경우 늘린다(stretch).
		
		플렉스 컨테이너가 flex-start의 align-items 값을 갖는다면
		타겟 플렉스 아이템은 flex-start 값, 즉 부모의 align-items 값을
		상속받는다.

----------------------

기타 - 반응형을 위한 지식

em vs rem

	em - 부모 기준 비례
	rem - 루트 앨리먼트 html 태그 기준 비례	