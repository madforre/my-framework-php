strtolower() - 소문자로 된 문자열 만들기

strtoupper() - 대문자로 된 문자열 만들기

정규표현식 관련 메서드

	preg_match() 

		첫번째 타겟을 찾고 난 다음 검색을 중지합니다.

	preg_match_all()

		문자열 전체 처리가 끝날 때까지 계속 찾습니다.


	* 세번째 매개변수인 matches가 제공되면 검색 결과로 채워집니다.
	* $matches [0] 에는 전체 패턴과 일치하는 텍스트가 포함되고 
	* $matches [1] 에는 첫 번째 캡처 된 괄호 안의 하위 패턴과 일치하는 텍스트가 포함됩니다.

 * PHP에서는 유효한 형식의 이메일 주소인지를 확인하기 위해 정규 표현식뿐만 아니라 filter_var() 함수를 제공하고 있습니다.

array_key_exists($key, $search)

	$key는 확인할 값
	$search는 확인할 키를 가진 배열


empty() - 비어있는 변수인지 검사하는 함수

	empty ( $var )

	$var가 비어있는지 검사하고, 비어있다면 TRUE, 비어있지 않다면 FALSE를 반환합니다.

	다음을 비어있는 것으로 판단합니다.
	
	“” (빈 문자열), 0 (정수 0), “0” (문자열 0), NULL, FALSE, array() (빈 배열), var $var; (클래스 안에서 값 없이 선언된 변수)


str_replace() — 발견한 모든 검색 문자열을 치환 문자열로 교체

	search
	replace
	subject
	subject가 배열이면, 검색 및 치환을 subject의 모든 원소에서 수행하고, 배열을 반환합니다.	

preg_match_all( string $pattern, string $subject, array $matches )

	pattern
		탐색할 문자열 패턴.

	subject
		입력 문자열.

	matches
		모든 매치의 배열. flags에 따라서는, 다차원 배열.

	flags 옵션이 없으면 일반적으로 $matches[0] 배열이 전체 패턴을 가지고, 
	$matches[1] 배열부터 괄호 안의 서브 패턴을 가지도록 결과를 지정합니다.


in_array — 값이 배열 안에 존재하는지 확인


클래스에서의 매직메서드

	function __call($name, $args)

		$name은 호출한 라우터 메서드의 이름,
		$args는 호출한 라우터 메서드의 익명함수


* PHP는 대소문자 상관없이 함수 호출이 가능하다. 클래스도 마찬가지.
  하지만 정의하거나 호출할 때는 표준을 따르도록 하자.

rtrim()

	문자열의 끝에서 공백 (또는 다른 문자)을 제거합니다.
	이 함수는 공백 문자 (또는 다른 문자)가 있는 문자열을의 끝에서 제거합니다

	두 번째 매개 변수가 없으면 rtrim () 은 공백인 문자들을 제거합니다.



* 함수의 인수가 불확실한 길이의 배열일 때 함수 호출하기

	함수 호출하고 인수에 배열 전달

		// Call the foobar() function with 2 arguments

		call_user_func_array("foobar", array("one", "two"));

	객체안의 함수를 호출하고 인수에 배열 전달

		// Call the $foo->bar() method with 2 arguments

		$foo = new foo;
		call_user_func_array(array($foo, "bar"), array("three", "four"));


	* 클로저가 return 이면 출력시 echo 사용하고
	* 클로저가 echo면 call_user_func_array 만 사용

* __DIR__ 은 ' 마법 상수 '이며 후행 슬래시가없는 현재 파일의 디렉토리를 반환합니다.

* array_push()를 하나의 원소를 넣는 데 사용한다면, $array[] = 을 사용하는 것이 좋습니다. 
  함수 호출의 오버헤드가 없기 때문입니다.

	array_push(입력 배열, 넣을 값)